name: build

on: [push]

jobs:

  build:
    runs-on: ubuntu-18.04
    strategy:
      max-parallel: 3
      matrix:
        python-version: [3.6, 3.7, 3.8]
    steps:
      - uses: actions/checkout@v1
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Lint with flake8
        run: |
          pip install flake8
          flake8 --ignore=E203,W503,W504 --exclude=docs,**/externals
      - name: Install package
        run: python setup.py install
      - name: Test with pytest
        run: |
          pip install pytest
          pytest

  conda:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - uses: s-weigand/setup-conda@v1
      - name: Check versions
        run: |
          conda --version
          which python
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install libopencv-dev libeigen3-dev libceres-dev
      - name: Create environment
        run: conda env create
      - name: Install package
        run: |
          source activate pri
          pip install --no-deps -e .
      - name: Test with pytest
        run: |
          source activate pri
          pytest

  black:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v1
      - name: Set up Python 3.6
        uses: actions/setup-python@v1
        with:
          python-version: 3.6
      - name: Check black code style
        run: |
          pip install black
          black --check .

  docs:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v1
      - name: Install Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.6
      - name: Install dependencies and package
        run: |
          pip install -r requirements.txt -r requirements_dev.txt
          pip install .
      - name: Build Sphinx docs and run doctests
        run: |
          make -C docs/ html
          make -C docs/ doctest
      - if: success() && github.ref == 'refs/heads/master'
        uses: crazy-max/ghaction-github-pages@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          target_branch: gh-pages
          build_dir: docs/_build/html/
