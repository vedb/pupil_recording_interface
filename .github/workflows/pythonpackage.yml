name: build

on: [push]

jobs:

  build:
    runs-on: ubuntu-18.04
    strategy:
      max-parallel: 3
      matrix:
        python-version: [3.6, 3.7, 3.8]
    steps:
      - uses: actions/checkout@v1
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt -r requirements_dev.txt
      - name: Lint with flake8
        run: |
          flake8 pupil_recording_interface tests --ignore=E203,W503,W504 --exclude=**/externals
      - name: Install package
        run: python setup.py install
      - name: Test with pytest
        run: |
          pytest

  conda:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - uses: s-weigand/setup-conda@v1
      - name: Check versions
        run: |
          conda --version
          which python
      - name: Create environment
        run: conda env create
      - name: Install package
        run: |
          source activate pri
          pip install --no-deps .
      - name: Test with pytest
        run: |
          source activate pri
          pytest

  conda-minimal:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - uses: s-weigand/setup-conda@v1
      - name: Check versions
        run: |
          conda --version
          which python
      - name: Create environment
        run: conda create -n pri python=3.6 xarray scipy opencv "msgpack-python<1.0"
      - name: Install package
        run: |
          source activate pri
          pip install --no-deps .
      - name: Test with pytest
        run: |
          source activate pri
          conda install pytest
          pytest

  docs:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - uses: s-weigand/setup-conda@v1
      - name: Check versions
        run: |
          conda --version
          which python
      - name: Create environment
        run: conda env create
      - name: Install package
        run: |
          source activate pri
          pip install --no-deps .
      - name: Build Sphinx docs and run doctests
        run: |
          source activate pri
          make -C docs/ html
          make -C docs/ doctest
      - if: success() && github.ref == 'refs/heads/master'
        name: push
        uses: crazy-max/ghaction-github-pages@v1.5.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          target_branch: gh-pages
          build_dir: docs/_build/html/

  docs-multiversion:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*
      - run: |
          git fetch --no-tags --prune --depth=1 origin +refs/heads/*:refs/remotes/origin/*
      - uses: s-weigand/setup-conda@v1
      - name: Check versions
        run: |
          conda --version
          which python
      - name: Create environment
        run: conda env create
      - name: Install package
        run: |
          source activate pri
          pip install --no-deps .
      - name: Build Sphinx multiversion docs
        run: |
          source activate pri
          sphinx-multiversion docs html
          cp docs/index.html docs/_build/html
      - if: success() && github.ref # == 'refs/heads/master'
        name: push
        uses: crazy-max/ghaction-github-pages@v1.5.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          target_branch: gh-pages
          build_dir: docs/_build/html/
  #          keep_history: true

  black:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v1
      - name: Set up Python 3.6
        uses: actions/setup-python@v1
        with:
          python-version: 3.6
      - name: Check black code style
        run: |
          pip install black==19.10b0
          black --check .
